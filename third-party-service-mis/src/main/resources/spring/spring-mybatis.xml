<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
       default-autowire="byName">

	<bean name="sqlSessionFactory" id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.cheyipai.platformservice.thirdparty.entity.User"/>
        <property name="plugins">
            <array>
                <bean class="com.cheyipai.platformservice.thirdparty.core.pager.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=true
                            reasonable=false
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cheyipai.platformservice.thirdparty.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <qualifier value="java"/>
    </bean>
    <!-- <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven> -->
    
    <!-- 配置声明式事务 -->
    <aop:config>
        <aop:pointcut id="baseServiceMethods"
            expression="execution(* com.cheyipai.platformservice.thirdparty.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods" />
    </aop:config>

    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="list*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="count*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="del*" propagation="REQUIRED" />

        </tx:attributes>
    </tx:advice>
    
    <!-- Mapper 数据源切换Aspect -->
    <bean id="mapperAspectBean" class="com.cheyipai.platformservice.thirdparty.core.aspect.MapperAspect" />
    <aop:config>
    	<aop:aspect id="mapperAspect" ref="mapperAspectBean">
    		<aop:pointcut expression="execution(* com.cheyipai.platformservice.thirdparty.mapper.*.*(..))" id="datasourceRoute"/>
    		<aop:before method="before" pointcut-ref="datasourceRoute"/>
    	</aop:aspect>
    </aop:config>
   	        
</beans>